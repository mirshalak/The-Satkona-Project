12345678901234567890123456789012345678901234567890123456789012345678901234567890

SK13:The Skeleton Key.

001:push
002:pop
003:store
004:load
005:parameter-to-return
006:return-to-parameter
007:define-word
008:end-define
009:add
010:subtract
011:char-to-int
012:int-to-char
013:execute-word

This system is not intended to be a Turing tarpit; but it ***is*** meant to be 
reflective of the principle that minimalism is conducive to survivability.  The 
less mass something has, the more difficult it is to stop.

3 digit addresses are necessary to maintain length consistency with globally 
facing Hexgate addresses; although host-specific conversion should be written 
to strip leading zeroes for internal computation, thus allowing branching via 
arithmetic, and re-add them when necessary.  This is only an issue for words 
below 100 anyway.

13 is the side length of the Hexgate itself.  2 vertices, 1 midpoint, 5 units
on each side.  5 also has a center, making this pattern fractal.

There are two stacks, a parameter and return stack.  There is also heap memory for 
the storage of words. Stack and heap implementation, and context shifting between 
parameter and return stack are host dependent.  

Words consist of tokens, bounded by the space character. (ASCII code 32)

Word format is as follows:-

define-word 
<3 digit, numerical Hexgate address> 
<word name> 
<word body>
end-define

Example:-

define-word 
009 
dup 
heap-variable 
store 
heap-variable 
load 
end-define
