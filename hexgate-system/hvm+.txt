LAYER 1 — HEXGATE ADDRESS SPACE
Purpose: universal, fixed topology
12 registers of 3 decimal digits each (0-9), giving 10^36 unique addresses; 
every entity can be placed in a single global lattice.

During normal operation all addresses shall contain 000 in registers R1–R9. 
Packets breaching this invariant MUST be discarded unless processed by a 
component explicitly authorised for inter-realm routing.

LAYER 2 — SKELETON KEY 7 (SK7) PRIMITIVES
Purpose: minimal permanent instruction set

001(+, "Addition").
002(-, "Subtraction").
003(., "Print the top of the stack").   
004(r>, "Push the top of the parameter stack, to the top of the return stack").
005(r<, (Push the top of the return stack, to the top of the parameter stack").
006(dup, "Duplicate the top of the parameter stack"). 
007(:, "Compile new words from currently existing words").

LAYER 3 — HEX FILE SYSTEM
Purpose: fractal storage and navigation
Core points: each partition has 998 top-level directories numbered 001–999, each acting as the central vertex of a hexagon. Each top-level directory contains six subdirectories (the lateral vertices) and two control files:
• adjacency-manifest — lists files in its six subdirectories
• adjacency-address — stores that directory’s Hexgate address

RULE R — RECURSIVE HEX GROWTH
Begin with one hexagon; attach a new hex to every free edge, then repeat. This produces an endlessly extensible, self-similar lattice that underpins both storage layout and spatial/virtual planning.

PERMANENT VS. TEMPORARY
Invariant cores (permanent): Hexgate addressing, SK7 primitives, Rule R geometry, and their axioms—analogous to DNA.
Everything else (temporary): user programs and social/economic layers—free to change or be discarded but must interoperate with the cores.
